@model Dictionary<string, List<AkiraShop2.Entities.Order>>

@{
    ViewData["Title"] = "Заказы. Пользоваетль -" + ViewBag.UserEmail;
}

<h1>Заказы. Пользоваетль - @ViewBag.UserEmail</h1>

<div>
    @foreach (var dictionary in Model)
    {
        <div class="item_DIV_error" style="margin-bottom: 40px; background-color:lightgray">
            @if (dictionary.Key == "formed")
            {
                <h3>Оплаченные заказы:</h3>
            }
            @if (dictionary.Key == "delivered")
            {
                <h3>Доставленные заказы:</h3>
            }
            @if (dictionary.Value.Count == 0)
            {
                <div class="item_DIV_error" style="margin-bottom: 20px;">
                    <h4>Нет товаров в списке!</h4>
                </div>
            }
            @for (int i = 0; i < dictionary.Value.Count; i++)
            {
                @if (dictionary.Value[i].Status == "CART")
                {
                    <h3>Корзина пользователя:</h3>
                }
                @if (dictionary.Value[i].Status == "WISH_LIST")
                {
                    <h3>Избранное пользователя:</h3>
                }
                
                <div class="item_DIV_error" style="margin-bottom: 20px;">
                    @if (dictionary.Value[i].items_with_amounts.Count != 0 && dictionary.Value[i].items_with_amounts != null)
                    {
                        @if (dictionary.Key == "formed")
                        {
                            <a class="btn buy_button product_buy_button" asp-controller="Order" asp-action="DeliverOrder" asp-route-orderId_index="@dictionary.Value[i].Id">Отметить заказ доставленным</a>
                        }
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => dictionary.Value[i].items_with_amounts.First().Key.Title)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => dictionary.Value[i].items_with_amounts.First().Key.Price)
                                    </th>
                                    <th>
                                        <p>Количество товара в заказе</p>
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var _item in dictionary.Value[i].items_with_amounts.Keys)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => _item.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => _item.Price)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => dictionary.Value[i].items_with_amounts[_item])
                                        </td>
                                        <td>
                                            <a asp-controller="Item" asp-action="Details" asp-route-id="@_item.Id">Подробно о данном товаре</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <a class="btn del_button" asp-controller="Order" asp-action="Delete" asp-route-orderId_index="@dictionary.Value[i].Id">Удалить заказ</a>
                    }
                    else
                    {

                        <h4>Нет товаров в списке!</h4>

                    }
                </div>
            }
        </div>
    }
</div>


